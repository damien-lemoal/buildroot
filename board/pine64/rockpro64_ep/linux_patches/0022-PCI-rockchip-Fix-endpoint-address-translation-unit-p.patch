From 94e04312533175d0f3c9ef32e5186250f4b66e8c Mon Sep 17 00:00:00 2001
From: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date: Thu, 16 Feb 2023 14:55:51 +0900
Subject: [PATCH 22/34] PCI: rockchip: Fix endpoint address translation unit
 programming

Remove writes to unused CPU registers and add the missing writes to the
desc2 register.

Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
---
 drivers/pci/controller/pcie-rockchip-ep.c | 26 +++++++----------------
 drivers/pci/controller/pcie-rockchip.h    |  4 ++++
 2 files changed, 12 insertions(+), 18 deletions(-)

diff --git a/drivers/pci/controller/pcie-rockchip-ep.c b/drivers/pci/controller/pcie-rockchip-ep.c
index 198b0ae11670..d90b9e119a53 100644
--- a/drivers/pci/controller/pcie-rockchip-ep.c
+++ b/drivers/pci/controller/pcie-rockchip-ep.c
@@ -67,9 +67,7 @@ static void rockchip_pcie_clear_ep_ob_atu(struct rockchip_pcie *rockchip,
 	rockchip_pcie_write(rockchip, 0,
 			    ROCKCHIP_PCIE_AT_OB_REGION_DESC1(region));
 	rockchip_pcie_write(rockchip, 0,
-			    ROCKCHIP_PCIE_AT_OB_REGION_CPU_ADDR0(region));
-	rockchip_pcie_write(rockchip, 0,
-			    ROCKCHIP_PCIE_AT_OB_REGION_CPU_ADDR1(region));
+			    ROCKCHIP_PCIE_AT_OB_REGION_DESC2(region));
 }
 
 static void rockchip_pcie_prog_ep_ob_atu(struct rockchip_pcie *rockchip, u8 fn,
@@ -77,8 +75,8 @@ static void rockchip_pcie_prog_ep_ob_atu(struct rockchip_pcie *rockchip, u8 fn,
 					 u64 pci_addr, size_t size)
 {
 	u64 sz = 1ULL << fls64(size - 1);
-	u32 addr0, addr1, desc0, desc1;
-	u32 num_pass_bits;
+	int num_pass_bits = ilog2(sz);
+	u32 addr0, addr1, desc0;
 
 	/* Sanity checks */
 	if (WARN_ON_ONCE(ALIGN_DOWN(phys_addr, SZ_1M) != phys_addr))
@@ -89,14 +87,14 @@ static void rockchip_pcie_prog_ep_ob_atu(struct rockchip_pcie *rockchip, u8 fn,
 		return;
 
 	/* We must pass at least 8 bits of PCI bus address */
-	num_pass_bits = max(8, ilog2(sz));
+	if (num_pass_bits < 8)
+		num_pass_bits = 8;
 
 	/* PCI bus address region */
 	addr0 = ((num_pass_bits - 1) & PCIE_CORE_OB_REGION_ADDR0_NUM_BITS) |
 		(lower_32_bits(pci_addr) & PCIE_CORE_OB_REGION_ADDR0_LO_ADDR);
 	addr1 = upper_32_bits(pci_addr);
 	desc0 = ROCKCHIP_PCIE_AT_OB_REGION_DESC0_DEVFN(fn) | type;
-	desc1 = 0;
 
 	rockchip_pcie_write(rockchip, addr0,
 			    ROCKCHIP_PCIE_AT_OB_REGION_PCI_ADDR0(r));
@@ -104,18 +102,10 @@ static void rockchip_pcie_prog_ep_ob_atu(struct rockchip_pcie *rockchip, u8 fn,
 			    ROCKCHIP_PCIE_AT_OB_REGION_PCI_ADDR1(r));
 	rockchip_pcie_write(rockchip, desc0,
 			    ROCKCHIP_PCIE_AT_OB_REGION_DESC0(r));
-	rockchip_pcie_write(rockchip, desc1,
+	rockchip_pcie_write(rockchip, 0,
 			    ROCKCHIP_PCIE_AT_OB_REGION_DESC1(r));
-
-	/* CPU bus address region */
-	addr0 = ((num_pass_bits - 1) & PCIE_CORE_OB_REGION_ADDR0_NUM_BITS) |
-		(lower_32_bits(phys_addr) & PCIE_CORE_OB_REGION_ADDR0_LO_ADDR);
-	addr1 = upper_32_bits(phys_addr);
-
-	rockchip_pcie_write(rockchip, addr0,
-			    ROCKCHIP_PCIE_AT_OB_REGION_CPU_ADDR0(r));
-	rockchip_pcie_write(rockchip, addr1,
-			    ROCKCHIP_PCIE_AT_OB_REGION_CPU_ADDR1(r));
+	rockchip_pcie_write(rockchip, 0,
+			    ROCKCHIP_PCIE_AT_OB_REGION_DESC2(r));
 }
 
 static int rockchip_pcie_ep_write_header(struct pci_epc *epc, u8 fn, u8 vfn,
diff --git a/drivers/pci/controller/pcie-rockchip.h b/drivers/pci/controller/pcie-rockchip.h
index 29adb3e68c60..0f00ba693a94 100644
--- a/drivers/pci/controller/pcie-rockchip.h
+++ b/drivers/pci/controller/pcie-rockchip.h
@@ -267,6 +267,10 @@
 		(PCIE_RC_EP_ATR_OB_REGIONS_1_32 + 0x0008 + ((r) & 0x1f) * 0x0020)
 #define ROCKCHIP_PCIE_AT_OB_REGION_DESC1(r)	\
 		(PCIE_RC_EP_ATR_OB_REGIONS_1_32 + 0x000c + ((r) & 0x1f) * 0x0020)
+#define ROCKCHIP_PCIE_AT_OB_REGION_DESC2(r)	\
+		(PCIE_RC_EP_ATR_OB_REGIONS_1_32 + 0x0010 + ((r) & 0x1f) * 0x0020)
+#define ROCKCHIP_PCIE_AT_OB_REGION_DESC3(r)	\
+		(PCIE_RC_EP_ATR_OB_REGIONS_1_32 + 0x0014 + ((r) & 0x1f) * 0x0020)
 #define ROCKCHIP_PCIE_AT_OB_REGION_CPU_ADDR0(r) \
 		(PCIE_RC_EP_ATR_OB_REGIONS_1_32 + 0x0018 + ((r) & 0x1f) * 0x0020)
 #define ROCKCHIP_PCIE_AT_OB_REGION_CPU_ADDR1(r) \
-- 
2.39.2

